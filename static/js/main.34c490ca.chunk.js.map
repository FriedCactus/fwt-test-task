{"version":3,"sources":["hooks/usePagintaionSlice.jsx","utils/api.js","store/GalleryStore.js","context/GalleryContext.jsx","components/GlobalStyles/GlobalStyles.jsx","components/GlobalStyles/breakpoints.jsx","components/Container/style.jsx","components/Container/Container.jsx","components/Input/style.jsx","components/Input/Input.jsx","components/Select/style.jsx","components/Select/Label.jsx","hooks/useClickOutside.jsx","components/Select/Select.jsx","components/Years/style.jsx","components/Years/Label.jsx","components/Years/Years.jsx","components/Filters/style.jsx","components/Filters/Filters.jsx","components/Gallery/style.jsx","components/Gallery/Label.jsx","components/Gallery/Gallery.jsx","components/Header/style.jsx","components/Header/Header.jsx","components/Pagination/style.jsx","components/Pagination/BackButtons.jsx","components/Pagination/ForwardButtons.jsx","components/Pagination/Pagination.jsx","components/Wrapper/style.jsx","components/Wrapper/Wrapper.jsx","components/App/App.jsx","components/Theme/Theme.jsx","index.js"],"names":["usePaginationSlice","current","amount","arr","Array","from","length","_","i","slice","start","end","propTypes","PropTypes","number","BASE_URL","fetchAuthors","a","fetch","data","json","alert","fetchLocations","fetchPaintings","page","perPage","filters","filterString","Object","keys","forEach","key","querry","value","GalleryStore","theme","paintings","name","author","location","before","paintingsOnPage","pagesCount","slicedPages","makeAutoObservable","this","filter","isOpen","windowWidth","window","innerWidth","runInAction","setPaintingsOnPage","api","authors","setFiltersData","locations","Math","ceil","setPagesCount","setPaintings","getPagesCount","getPaintings","setPage","setSlicedPages","GalleryContext","React","createContext","GalleryProvider","children","Provider","GlobalStyles","createGlobalStyle","props","mainColor","secondaryColor","sizes","breakpoints","l","m","s","Container","styled","div","InputRow","borderColor","Input","input","placeholderColor","observer","placeholder","store","useContext","history","useHistory","onChange","e","setFilters","target","handleChange","onKeyPress","push","fullGalleryUpdate","handleKeyPress","SelectRow","LabelRow","LabelText","span","LabelIconRow","LabelIcon","svg","attrs","viewBox","fill","xmlns","List","ul","ListItem","li","ListText","Label","label","d","string","bool","useClickOutside","ref","handler","useEffect","listener","event","contains","document","addEventListener","removeEventListener","Select","options","getFunc","useState","setLabel","setIsOpen","useRef","onClick","stopPropagation","nativeEvent","stopImmediatePropagation","style","maxHeight","padding","map","item","id","option","YearsMenu","YearsInputRow","filtersInputColor","YearsInput","type","min","YearsMenuDash","Years","Number","Filters","getAuthors","getLocations","GalleryRow","section","GalleryContainer","ImageRow","ImageLink","Image","img","ImageLabelRow","ImageTitle","h3","LabelTitle","p","title","text","Gallery","useParams","getPaintingsOnPage","findFieldById","field","find","index","href","imageUrl","rel","src","alt","authorId","created","locationId","Header","header","LogoRow","Logo","ThemeRow","ThemeIcon","setTheme","styledLink","NavLink","disabled","disabledButtonColor","Pagination","ArrowButton","ArrowButtonIcon","DoubleArrowButtonIcon","NumberButton","BackButtons","changePage","to","ForwardButtons","handleClick","preventDefault","scrollTo","top","behavior","activeClassName","Wrapper","App","path","exact","themes","dark","light","Theme","ReactDOM","render","getElementById"],"mappings":"gRAEMA,EAAqB,SAACC,EAASC,GACnC,IAAIC,EAAMC,MAAMC,KAAK,CAAEC,OAAQJ,IAAU,SAACK,EAAGC,GAAJ,OAAUA,EAAI,KAEvD,GAAIN,GAAU,EAAG,MAAO,GACxB,GAAID,GAAW,EAAG,OAAOE,EAAIM,MAAM,EAAG,GACtC,GAAIR,GAAWC,EAAQ,OAAOC,EAAIM,OAAO,GAEzC,IAAMC,EAAQT,EAAU,EAClBU,EAAMV,EAAU,EAEtB,OAAOE,EAAIM,MAAMC,EAAOC,IAG1BX,EAAmBY,UAAY,CAC7BX,QAASY,IAAUC,OACnBZ,OAAQW,IAAUC,QAGLd,I,wBAAAA,IClBFe,EAAW,oCAEXC,EAAY,uCAAG,4BAAAC,EAAA,+EAELC,MAAM,GAAD,OAAIH,EAAJ,aAFA,cAElBI,EAFkB,gBAGXA,EAAKC,OAHM,wEAKxBC,MAAM,mPALkB,yDAAH,qDASZC,EAAc,uCAAG,4BAAAL,EAAA,+EAEPC,MAAM,GAAD,OAAIH,EAAJ,eAFE,cAEpBI,EAFoB,gBAGbA,EAAKC,OAHQ,wEAK1BC,MAAM,iOALoB,yDAAH,qDASdE,EAAc,uCAAG,WAAOC,EAAMC,EAASC,GAAtB,iBAAAT,EAAA,6DACxBU,EAAe,GAEfH,IACFG,GAAY,gBAAaH,IAGvBC,IACFE,GAAY,kBAAeF,IAG7BG,OAAOC,KAAKH,GAASI,SAAQ,SAACC,GACxBL,EAAQK,GAAKC,QAAUN,EAAQK,GAAKE,QACtCN,GAAY,WAAQD,EAAQK,GAAKC,OAArB,YAA+BN,EAAQK,GAAKE,WAbhC,kBAkBPf,MAAM,GAAD,OAAIH,EAAJ,sBAA0BY,IAlBxB,cAkBpBR,EAlBoB,iBAoBbA,EAAKC,OApBQ,2EAsB1BC,MAAM,oNAtBoB,0DAAH,0DChBrBa,E,WACJ,aAAe,yBAMfC,MAAQ,QANM,KASdC,UAAY,GATE,KAYdV,QAAU,CACRW,KAAM,CACJL,OAAQ,IACRC,MAAO,IAETK,OAAQ,CACNN,OAAQ,WACRb,KAAM,GACNc,MAAO,IAETM,SAAU,CACRP,OAAQ,cACRb,KAAM,GACNc,MAAO,IAET5B,KAAM,CACJ2B,OAAQ,eACRC,MAAO,IAETO,OAAQ,CACNR,OAAQ,eACRC,MAAO,KAjCG,KAsCdT,KAAO,EAtCO,KAwCdiB,gBAAkB,EAxCJ,KA0CdC,WAAa,EA1CC,KA4CdC,YAAc,GA3CZC,YAAmBC,M,4CA+CrB,SAASZ,GACPY,KAAKV,MAAQF,I,0BAIf,SAAad,GACX0B,KAAKT,UAAYjB,I,qBAInB,SAAQL,GACN+B,KAAKrB,KAAOV,I,gCAId,SAAmBA,GACjB+B,KAAKJ,gBAAkB3B,I,2BAIzB,SAAcA,GACZ+B,KAAKH,WAAa5B,I,4BAIpB,SAAeX,GACb0C,KAAKF,YAAcxC,I,wBAIrB,SAAW2C,EAAQb,GACjBY,KAAKnB,QAAQoB,GAAQb,MAAQA,I,4BAI/B,SAAea,EAAQ3B,GACrB0B,KAAKnB,QAAQoB,GAAQ3B,KAAOA,I,+BAI9B,SAAkB2B,EAAQb,GACxBY,KAAKnB,QAAQoB,GAAQC,OAASd,I,gCAKhC,WAAsB,IAAD,OACbe,EAAcC,OAAOC,WAEvBF,EAAc,IAChBG,aAAY,WACV,EAAKC,mBAAmB,MAEjBJ,GAAe,KAAOA,EAAc,KAC7CG,aAAY,WACV,EAAKC,mBAAmB,MAG1BD,aAAY,WACV,EAAKC,mBAAmB,Q,+DAM9B,4BAAAnC,EAAA,sEACwBoC,IADxB,OACQC,EADR,OAGET,KAAKU,eAAe,SAAUD,GAHhC,gD,uHAOA,mCAAArC,EAAA,sEAC0BoC,IAD1B,OACQG,EADR,OAGEL,aAAY,WACV,EAAKI,eAAe,WAAYC,MAJpC,2C,wHASA,qCAAAvC,EAAA,sEACqBoC,EAAmB,GAAI,GAAIR,KAAKnB,SADrD,OACQP,EADR,OAEQuB,EAAae,KAAKC,KAAKvC,EAAKb,OAASuC,KAAKJ,iBAEhDU,aAAY,WACV,EAAKQ,cAAcjB,MALvB,gD,uHAUA,mCAAAzB,EAAA,sEAC0BoC,EACtBR,KAAKrB,KACLqB,KAAKJ,gBACLI,KAAKnB,SAJT,OACQU,EADR,OAOEe,aAAY,WACV,EAAKS,aAAaxB,MARtB,gD,4HAaA,iCAAAnB,EAAA,sEACQ4B,KAAKgB,gBADb,uBAEQhB,KAAKiB,eAFb,OAIEX,aAAY,WACV,EAAKY,QAAQ,GACb,EAAKC,eAAehE,EAAmB,EAAKwB,KAAM,EAAKkB,gBAN3D,gD,6DAWaR,I,OCtKF+B,EAAiBC,IAAMC,cAAc,cAAC,EAAD,KAErCC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC7B,cAACJ,EAAeK,SAAhB,CAAyBrC,MAAO,IAAIC,EAApC,SACGmC,K,cCuBUE,EA7BMC,YAAH,qdAMU,SAACC,GAAD,OAAWA,EAAMtC,MAAMuC,aAClC,SAACD,GAAD,OAAWA,EAAMtC,MAAMwC,kBCTlCC,EAED,SAFCA,EAGD,QASUC,EANK,CAClBC,EAAE,cAAD,OANE,UAOHC,EAAE,cAAD,OAAgBH,GACjBI,EAAE,cAAD,OAAgBJ,ICNNK,EAAYC,IAAOC,IAAV,sYAMVN,EAAYG,EAIZH,EAAYE,EAIZF,EAAYC,GCLTG,EARG,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SACnB,OAAO,cAAC,EAAD,UAAcA,KCFVe,EAAWF,IAAOC,IAAV,6SAUC,SAACV,GAAD,OAAWA,EAAMtC,MAAMkD,cAGjCR,EAAYG,GAMXM,EAAQJ,IAAOK,MAAV,oSAIP,SAACd,GAAD,OAAWA,EAAMtC,MAAMwC,kBASrB,SAACF,GAAD,OAAWA,EAAMtC,MAAMqD,mBAGxBX,EAAYG,GCITM,EAjCDG,aAAS,YAAqC,IAAlCC,EAAiC,EAAjCA,YAAa5C,EAAoB,EAApBA,OAAQb,EAAY,EAAZA,MACvC0D,EAAQC,qBAAW3B,GACnB4B,EAAUC,cAahB,OACE,cAAC,EAAD,UACE,cAAC,EAAD,CACEJ,YAAaA,EACbzD,MAAOA,EACP8D,SAAU,SAACC,GAAD,OAhBK,SAACA,GACpBL,EAAMM,WAAWnD,EAAQkD,EAAEE,OAAOjE,OAebkE,CAAaH,IAC9BI,WAAY,SAACJ,GAAD,OAbK,SAACA,GACR,UAAVA,EAAEjE,MAEN8D,EAAQQ,KAAK,WACbV,EAAMW,qBASiBC,CAAeP,W,QC3B7BQ,EAAYtB,IAAOC,IAAV,qVAQA,SAACV,GAAD,OAAWA,EAAMtC,MAAMuC,aAEb,SAACD,GAAD,OAAWA,EAAMtC,MAAMkD,eACpC,SAACZ,GAAD,OAAYA,EAAM1B,OAAS,cAAgB,QAElD8B,EAAYG,GAOXyB,GAAWvB,IAAOC,IAAV,sNAYRuB,GAAYxB,IAAOyB,KAAV,0MAQV9B,EAAYG,GAKX4B,GAAe1B,IAAOC,IAAV,4HAMV,SAACV,GAAD,OAAYA,EAAM1B,OAAS,iBAAmB,MAGhD8D,GAAY3B,IAAO4B,IAAIC,MAAM,CACxCC,QAAS,WACTC,KAAM,OACNC,MAAO,8BAHgBhC,CAAH,wFAKZ,SAACT,GAAD,OAAWA,EAAMtC,MAAMqD,oBAMpB2B,GAAOjC,IAAOkC,GAAV,0bAae,SAAC3C,GAAD,OAAWA,EAAMtC,MAAMkD,cAM3CR,EAAYG,EAIZH,EAAYG,GAKXqC,GAAWnC,IAAOoC,GAAV,gTAUG,SAAC7C,GAAD,OAAWA,EAAMtC,MAAMwC,kBAClC,SAACF,GAAD,OAAWA,EAAMtC,MAAMuC,YAGxBG,EAAYG,EAIZH,EAAYG,GAKXuC,GAAWrC,IAAOyB,KAAV,qGCjHfa,GAAQ/B,aAAS,gBAAGgC,EAAH,EAAGA,MAAO/B,EAAV,EAAUA,YAAa3C,EAAvB,EAAuBA,OAAvB,OACrB,eAAC,GAAD,WACE,cAAC,GAAD,UAAc0E,GAAS/B,IACvB,cAAC,GAAD,CAAgB3C,OAAQA,EAAxB,SACE,cAAC,GAAD,UACE,sBAAM2E,EAAE,uOAMhBF,GAAM5G,UAAY,CAChB6G,MAAO5G,IAAU8G,OACjBjC,YAAa7E,IAAU8G,OACvB5E,OAAQlC,IAAU+G,MAGLJ,U,iBCMAK,I,2BAAAA,GA3Bf,SAAyBC,EAAKC,GAC5BC,qBACE,WACE,IAAMC,EAAW,SAACC,GAEXJ,EAAI7H,UAAW6H,EAAI7H,QAAQkI,SAASD,EAAMhC,SAG/C6B,KAIF,OAFAK,SAASC,iBAAiB,YAAaJ,GACvCG,SAASC,iBAAiB,aAAcJ,GACjC,WACLG,SAASE,oBAAoB,YAAaL,GAC1CG,SAASE,oBAAoB,aAAcL,MAS/C,CAACH,EAAKC,KCyDKQ,GArEA9C,aAAS,YAAgD,IAA7CC,EAA4C,EAA5CA,YAAa5C,EAA+B,EAA/BA,OAAQ0F,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACvD,EAA0BC,mBAAS,IAAnC,mBAAOjB,EAAP,KAAckB,EAAd,KACA,EAA4BD,oBAAS,GAArC,mBAAO3F,EAAP,KAAe6F,EAAf,KAEMjD,EAAQC,qBAAW3B,GACnB4B,EAAUC,cACVgC,EAAMe,iBAAO,MAEnBb,qBAAU,WAERS,MACC,CAAC9C,IAGJkC,GAAgBC,GAAK,WACnBc,GAAU,MAwBZ,OACE,eAAC,EAAD,CAAad,IAAKA,EAAK/E,OAAQA,EAAQ+F,QAAS,WAfhDF,GAAW7F,IAeX,UACE,cAAC,GAAD,CAAO0E,MAAOA,EAAO/B,YAAaA,EAAa3C,OAAQA,IAEtDA,GAAU4C,EAAMjE,QAAQoB,GAAQ3B,MAC/B,cAAC,GAAD,CAAQ2H,QAzBY,SAAC9C,GACzBA,EAAE+C,kBACF/C,EAAEgD,YAAYC,4BAuBV,SACE,cAAC,KAAD,CAAWC,MAAO,CAAEC,UAAW,UAAWC,QAAS,UAAnD,SACGzD,EAAMjE,QAAQoB,GAAQ3B,KAAKkI,KAAI,SAACC,GAAD,OAC9B,cAAC,GAAD,CAEER,QAAS,kBArBE7G,EAqBoBqH,EAAKC,GArBlBC,EAqBsBF,EAAKd,GApBzD3C,EAAQQ,KAAK,WAEbsC,EAASa,GAET7D,EAAMM,WAAWnD,EAAQb,GACzB2G,GAAU,QAEVjD,EAAMW,oBARgB,IAACrE,EAAOuH,GAmBpB,SAIE,cAAC,GAAD,UAAaF,EAAKd,MAHbc,EAAKC,iBC1Db/C,GAAYtB,IAAOC,IAAV,wSAOA,SAACV,GAAD,OAAWA,EAAMtC,MAAMuC,aAEb,SAACD,GAAD,OAAWA,EAAMtC,MAAMkD,eACpC,SAACZ,GAAD,OAAYA,EAAM1B,OAAS,cAAgB,QAElD8B,EAAYG,GAOXyB,GAAWvB,IAAOC,IAAV,wNAYRuB,GAAYxB,IAAOyB,KAAV,4MAQV9B,EAAYG,GAKX4B,GAAe1B,IAAOC,IAAV,8HAMV,SAACV,GAAD,OAAYA,EAAM1B,OAAS,iBAAmB,MAGhD8D,GAAY3B,IAAO4B,IAAIC,MAAM,CACxCC,QAAS,WACTC,KAAM,OACNC,MAAO,8BAHgBhC,CAAH,0FAKZ,SAACT,GAAD,OAAWA,EAAMtC,MAAMqD,oBAOpBiE,GAAYvE,IAAOC,IAAV,obAaU,SAACV,GAAD,OAAWA,EAAMtC,MAAMkD,cAK3CR,EAAYG,EAIZH,EAAYC,GAKX4E,GAAgBxE,IAAOC,IAAV,2OASJ,SAACV,GAAD,OAAWA,EAAMtC,MAAMwH,qBAKhCC,GAAa1E,IAAOK,MAAMwB,MAAM,CAC3C8C,KAAM,SACNC,IAAK,GAFmB5E,CAAH,qTAmBXL,EAAYG,GAKX+E,GAAgB7E,IAAOyB,KAAV,gOAKJ,SAAClC,GAAD,OAAWA,EAAMtC,MAAMwC,iBAEjCE,EAAYG,EAIZH,EAAYC,GC1IlB0C,GAAQ/B,aAAS,gBAAGC,EAAH,EAAGA,YAAarF,EAAhB,EAAgBA,KAAMmC,EAAtB,EAAsBA,OAAQO,EAA9B,EAA8BA,OAA9B,OACrB,eAAC,GAAD,WACE,cAAC,GAAD,UACG1C,GAAQmC,EAAR,UAAoBnC,EAApB,cAA8BmC,GAAWkD,IAG5C,cAAC,GAAD,CAAgB3C,OAAQA,EAAxB,SACE,cAAC,GAAD,UACE,sBAAM2E,EAAE,uOAMhBF,GAAM5G,UAAY,CAChB8E,YAAa7E,IAAU8G,OACvBtH,KAAMQ,IAAUC,OAChB0B,OAAQ3B,IAAUC,OAClBiC,OAAQlC,IAAU+G,MAGLJ,I,iCAAAA,MC6DAwC,GA7EDvE,aAAS,YAAoC,IAAjCC,EAAgC,EAAhCA,YAAarF,EAAmB,EAAnBA,KAAMmC,EAAa,EAAbA,OAC3C,EAA4BkG,oBAAS,GAArC,mBAAO3F,EAAP,KAAe6F,EAAf,KAEMjD,EAAQC,qBAAW3B,GACnB4B,EAAUC,cACVgC,EAAMe,iBAAO,MAGnBhB,GAAgBC,GAAK,WACnBc,GAAU,MAIZ,IASMzC,EAAe,SAACH,EAAGlD,GACvB6C,EAAMM,WAAWnD,EAAQkD,EAAEE,OAAOjE,QAG9BsE,EAAiB,SAACP,GACR,UAAVA,EAAEjE,MAEN8D,EAAQQ,KAAK,WACbuC,GAAU,GAEVjD,EAAMW,sBAGR,OACE,eAAC,GAAD,CAAawB,IAAKA,EAAK/E,OAAQA,EAAQ+F,QAAS,WAjBhDF,GAAW7F,IAiBX,UACE,cAAC,GAAD,CACE2C,YAAaA,EACbrF,KAAM4J,OAAOtE,EAAMjE,QAAQrB,GAAM4B,OACjCO,OAAQyH,OAAOtE,EAAMjE,QAAQc,GAAQP,OACrCc,OAAQA,IAGTA,GACC,eAAC,GAAD,CAAa+F,QAhCO,SAAC9C,GACzBA,EAAE+C,kBACF/C,EAAEgD,YAAYC,4BA8BV,UACE,cAAC,GAAD,UACE,cAAC,GAAD,CACEvD,YAAY,OACZzD,MAAO0D,EAAMjE,QAAQrB,GAAM4B,MAC3B8D,SAAU,SAACC,GAAD,OAAOG,EAAaH,EAAG,SACjCI,WAAY,SAACJ,GAAD,OAAOO,EAAeP,QAItC,cAAC,GAAD,IAEA,cAAC,GAAD,UACE,cAAC,GAAD,CACEN,YAAY,SACZzD,MAAO0D,EAAMjE,QAAQc,GAAQP,MAC7B8D,SAAU,SAACC,GAAD,OAAOG,EAAaH,EAAG,WACjCI,WAAY,SAACJ,GAAD,OAAOO,EAAeP,iBCvEnCkE,GAAUhF,IAAOC,IAAV,4BCoCL+E,GA7BCzE,aAAS,WACvB,IAAME,EAAQC,qBAAW3B,GAEzB,OACE,cAAC,GAAD,UACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEyB,YAAY,OACZ5C,OAAO,OACPb,MAAO0D,EAAMjE,QAAQW,KAAKJ,QAE5B,cAAC,GAAD,CACEyD,YAAY,SACZ5C,OAAO,SACP0F,QAAQ,OACRC,QAAS,kBAAM9C,EAAMwE,gBAEvB,cAAC,GAAD,CACEzE,YAAY,WACZ5C,OAAO,WACP0F,QAAQ,WACRC,QAAS,kBAAM9C,EAAMyE,kBAEvB,cAAC,GAAD,CAAO1E,YAAY,UAAUrF,KAAK,OAAOmC,OAAO,mBC5B3C6H,GAAanF,IAAOoF,QAAV,iLAIXzF,EAAYG,EAIZH,EAAYE,GAKXwF,GAAmBrF,YAAOD,EAAPC,CAAH,gDAIhBsF,GAAWtF,IAAOC,IAAV,8VAUTN,EAAYG,EAKZH,EAAYE,EAKZF,EAAYC,GAKX2F,GAAYvF,IAAOjE,EAAV,4BAETyJ,GAAQxF,IAAOyF,IAAV,+DAMLC,GAAgB1F,IAAOC,IAAV,oVAmBb0F,GAAa3F,IAAO4F,GAAV,2RAWXjG,EAAYG,GAKXyB,GAAWvB,IAAOC,IAAV,mNASTN,EAAYG,GAKX+F,GAAa7F,IAAO8F,EAAV,yEAKVtE,GAAYxB,IAAO8F,EAAV,mDCtGhBxD,GAAQ/B,aAAS,gBAAGwF,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACrB,eAAC,GAAD,WACE,cAAC,GAAD,UAAeD,IACf,cAAC,GAAD,UAAcC,UAIlB1D,GAAM5G,UAAY,CAChBqK,MAAOpK,IAAU8G,OACjBuD,KAAMrK,IAAU8G,QAGHH,I,oCAAAA,MCiDA2D,GAzDC1F,aAAS,WACvB,IAAME,EAAQC,qBAAW3B,GACjBzC,EAAS4J,cAAT5J,KAERwG,qBAAU,WAEJxG,GAAQmE,EAAMnE,MAAQA,GACxBmE,EAAM5B,QAAQkG,OAAOzI,IAIvBmE,EAAM0F,qBACN1F,EAAM9B,gBACN8B,EAAM7B,iBACL,CAAC6B,IAGJ,IAAM2F,EAAgB,SAACC,EAAOhC,GAC5B,OAAO5D,EAAMjE,QAAQ6J,GAAOpK,KAAKqK,MAAK,SAAClC,GAAD,OAAUA,EAAKC,KAAOA,MAG9D,OACE,cAAC,GAAD,UACE,cAAC,GAAD,UACG5D,EAAMvD,WACLuD,EAAMvD,UAAUiH,KAAI,SAACC,EAAMmC,GAAP,OAClB,eAAC,GAAD,WACE,cAAC,GAAD,CACEC,KAAM3K,EAAWuI,EAAKqC,SACtBzF,OAAO,SACP0F,IAAI,sBAHN,SAKE,cAAC,GAAD,CACEC,IAAK9K,EAAWuI,EAAKqC,SACrBG,IAAG,gBAAWL,OAGlB,eAAC,GAAD,WACE,cAAC,GAAD,UAAenC,EAAKjH,OAEpB,cAAC,GAAD,CACE4I,MAAM,UACNC,KAAMI,EAAc,SAAUhC,EAAKyC,UAAU1J,OAE/C,cAAC,GAAD,CAAO4I,MAAM,WAAWC,KAAM5B,EAAK0C,UACnC,cAAC,GAAD,CACEf,MAAM,YACNC,KAAMI,EAAc,WAAYhC,EAAK2C,YAAY1J,gBArBtC+G,EAAKC,cCjCrB2C,GAAShH,IAAOiH,OAAV,4HAIPtH,EAAYG,GAKXoH,GAAUlH,IAAOC,IAAV,uFAMPkH,GAAOnH,IAAOyF,IAAV,4BAEJ2B,GAAWpH,IAAOC,IAAV,6HAQRoH,GAAYrH,IAAO4B,IAAIC,MAAM,CACxCC,QAAS,YACTC,KAAM,OACNC,MAAO,8BAHgBhC,CAAH,0FAKZ,SAACT,GAAD,OAAWA,EAAMtC,MAAMwC,kBCHlBuH,GAxBAzG,aAAS,WACtB,IAAME,EAAQC,qBAAW3B,GAMzB,OACE,cAAC,GAAD,UACE,eAAC,EAAD,WACE,cAAC,GAAD,UACE,cAAC,GAAD,CAAQ4H,IAAI,uBAGd,cAAC,GAAD,CAAY/C,QAXQ,WACR,UAAhBnD,EAAMxD,MAAoBwD,EAAM6G,SAAS,QAAU7G,EAAM6G,SAAS,UAU9D,SACE,cAAC,GAAD,UACE,sBAAM9E,EAAE,uvDCjBd+E,GAAavH,YAAOwH,IAAPxH,CAAH,skBACJ,SAACT,GAAD,OAAYA,EAAMkI,SAAW,OAAS,aAW5B,SAAClI,GAAD,OAAWA,EAAMtC,MAAMuC,aAClC,SAACD,GAAD,OAAWA,EAAMtC,MAAMwC,kBAG5B,SAACF,GAAD,OACAA,EAAMkI,SACFlI,EAAMtC,MAAMyK,oBACZnI,EAAMtC,MAAMwC,kBAYd,SAACF,GAAD,OACAA,EAAMkI,SACFlI,EAAMtC,MAAMyK,oBACZnI,EAAMtC,MAAMwC,iBAGZE,EAAYC,GAEE,SAACL,GAAD,OAClBA,EAAMkI,SAAW,GAAKlI,EAAMtC,MAAMwC,kBAC3B,SAACF,GAAD,OAAYA,EAAMkI,SAAW,GAAKlI,EAAMtC,MAAMuC,aAKhDmI,GAAa3H,IAAOC,IAAV,0HAIXN,EAAYE,GAMX+H,GAAc5H,YAAOuH,GAAPvH,CAAH,sMAGV,SAACT,GAAD,OACNA,EAAMkI,SACFlI,EAAMtC,MAAMyK,oBACZnI,EAAMtC,MAAMwC,iBAIZE,EAAYC,GAIN,SAACL,GAAD,OAAYA,EAAMkI,SAAW,GAAKlI,EAAMtC,MAAMuC,aAOnDqI,GAAkB7H,IAAO4B,IAAIC,MAAM,CAC9CC,QAAS,WACTC,KAAM,OACNC,MAAO,8BAHsBhC,CAAH,oEASf8H,GAAwB9H,IAAO4B,IAAIC,MAAM,CACpDC,QAAS,YACTC,KAAM,OACNC,MAAO,8BAH4BhC,CAAH,qEAUrB+H,GAAe/H,YAAOuH,GAAPvH,CAAH,8FAED,SAACT,GAAD,OAAWA,EAAMtC,MAAMwC,kBAClC,SAACF,GAAD,OAAWA,EAAMtC,MAAMuC,aClErBwI,GA/BKzH,aAAS,YAAqB,IAAlB0H,EAAiB,EAAjBA,WACxBxH,EAAQC,qBAAW3B,GAEzB,OACE,qCACE,cAAC,GAAD,CACE0I,SAAyB,IAAfhH,EAAMnE,KAChBsH,QAAS,SAAC9C,GAAD,OAAOmH,EAAWnH,EAAG,IAC9BoH,GAAI,UAHN,SAKE,cAAC,GAAD,UACE,sBAAM1F,EAAE,wvBAGZ,cAAC,GAAD,CACEiF,SAAyB,IAAfhH,EAAMnE,KAChBsH,QAAS,SAAC9C,GAAD,OAAOmH,EAAWnH,EAAGL,EAAMnE,KAAO,IAC3C4L,GAAI,UAAYzH,EAAMnE,KAAO,GAH/B,SAKE,cAAC,GAAD,UACE,sBAAMkG,EAAE,2YCWH2F,GA/BQ5H,aAAS,YAAqB,IAAlB0H,EAAiB,EAAjBA,WAC3BxH,EAAQC,qBAAW3B,GAEzB,OACE,qCACE,cAAC,GAAD,CACE0I,SAAUhH,EAAMnE,OAASmE,EAAMjD,WAC/BoG,QAAS,SAAC9C,GAAD,OAAOmH,EAAWnH,EAAGL,EAAMnE,KAAO,IAC3C4L,GAAI,UAAYzH,EAAMnE,KAAO,GAH/B,SAKE,cAAC,GAAD,UACE,sBAAMkG,EAAE,oYAGZ,cAAC,GAAD,CACEiF,SAAUhH,EAAMnE,OAASmE,EAAMjD,WAC/BoG,QAAS,SAAC9C,GAAD,OAAOmH,EAAWnH,EAAGL,EAAMjD,aACpC0K,GAAI,SAAWzH,EAAMjD,WAHvB,SAKE,cAAC,GAAD,UACE,sBAAMgF,EAAE,6wBCgCHmF,GA/CIpH,aAAS,WAC1B,IAAME,EAAQC,qBAAW3B,GAEzB+D,qBAAU,WAERrC,EAAM3B,eAAehE,EAAmB2F,EAAMnE,KAAMmE,EAAMjD,eACzD,CAACiD,IAEJ,IAAM2H,EAAc,SAACtH,EAAGxE,GAClBA,IAASmE,EAAMnE,MAAQA,GAAQ,GAAKA,EAAOmE,EAAMjD,WACnDsD,EAAEuH,kBAIJtK,OAAOuK,SAAS,CACdC,IAAK,EACLC,SAAU,WAGZ/H,EAAM5B,QAAQvC,GACdmE,EAAM3B,eAAehE,EAAmB2F,EAAMnE,KAAMmE,EAAMjD,aAE1DiD,EAAM7B,iBAGR,OACE,cAAC,EAAD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAaqJ,WAAY,SAACnH,EAAGxE,GAAJ,OAAa8L,EAAYtH,EAAGxE,MAEpDmE,EAAMhD,YAAY0G,KAAI,SAACC,EAAMmC,GAAP,OACrB,cAAC,GAAD,CAEE3C,QAAS,SAAC9C,GAAD,OAAOsH,EAAYtH,EAAGsD,IAC/B8D,GAAI,SAAW9D,EACfqE,gBAAgB,SAJlB,SAMGrE,GALImC,MAST,cAAC,GAAD,CAAgB0B,WAAY,SAACnH,EAAGxE,GAAJ,OAAa8L,EAAYtH,EAAGxE,cClDnDoM,GAAU1I,IAAOC,IAAV,wUAORN,EAAYG,EAKZH,EAAYE,EAIZF,EAAYC,GCTT8I,GANC,SAAC,GAAD,IAAGvJ,EAAH,EAAGA,SAAH,OAAkB,cAAC,GAAD,UAAYA,KC0B/BwJ,GApBHpI,aAAS,WACnB,IAAME,EAAQC,qBAAW3B,GAEzB,OACE,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6J,KAAK,cAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUV,GAAG,iBAGhBzH,EAAMjD,WAAa,GAAK,cAAC,GAAD,UCpBzBsL,GAAS,CACbC,KAAM,CACJvJ,UAAW,UACXC,eAAgB,UAChBU,YAAa,UACbG,iBAAkB,2BAClBmE,kBAAmB,UACnBiD,oBAAqB,4BAEvBsB,MAAO,CACLxJ,UAAW,UACXC,eAAgB,UAChBU,YAAa,qBACbG,iBAAkB,qBAClBmE,kBAAmB,UACnBiD,oBAAqB,uBAUVuB,GAND1I,aAAS,YAAmB,IAAhBpB,EAAe,EAAfA,SAClBsB,EAAQC,qBAAW3B,GAEzB,OAAO,cAAC,IAAD,CAAe9B,MAAO6L,GAAOrI,EAAMxD,OAAnC,SAA4CkC,OCnBrD+J,IAASC,OACP,cAAC,EAAD,UACE,eAAC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,GAAD,WAINjG,SAASkG,eAAe,W","file":"static/js/main.34c490ca.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst usePaginationSlice = (current, amount) => {\r\n  let arr = Array.from({ length: amount }, (_, i) => i + 1);\r\n\r\n  if (amount <= 1) return [];\r\n  if (current <= 1) return arr.slice(0, 3);\r\n  if (current >= amount) return arr.slice(-3);\r\n\r\n  const start = current - 2;\r\n  const end = current + 1;\r\n\r\n  return arr.slice(start, end);\r\n};\r\n\r\nusePaginationSlice.propTypes = {\r\n  current: PropTypes.number,\r\n  amount: PropTypes.number,\r\n};\r\n\r\nexport default usePaginationSlice;\r\n","import { toJS } from \"mobx\";\r\n\r\nexport const BASE_URL = \"https://test-front.framework.team\";\r\n\r\nexport const fetchAuthors = async () => {\r\n  try {\r\n    const data = await fetch(`${BASE_URL}/authors`);\r\n    return await data.json();\r\n  } catch (e) {\r\n    alert(\"Произошла ошибка при загрузке списка авторов\");\r\n  }\r\n};\r\n\r\nexport const fetchLocations = async () => {\r\n  try {\r\n    const data = await fetch(`${BASE_URL}/locations`);\r\n    return await data.json();\r\n  } catch (e) {\r\n    alert(\"Произошла ошибка при загрузке списка мест\");\r\n  }\r\n};\r\n\r\nexport const fetchPaintings = async (page, perPage, filters) => {\r\n  let filterString = \"\";\r\n\r\n  if (page) {\r\n    filterString += `_page=${page}`;\r\n  }\r\n\r\n  if (perPage) {\r\n    filterString += `&_limit=${perPage}`;\r\n  }\r\n\r\n  Object.keys(filters).forEach((key) => {\r\n    if (filters[key].querry && filters[key].value) {\r\n      filterString += `&${filters[key].querry}=${filters[key].value}`;\r\n    }\r\n  });\r\n\r\n  try {\r\n    const data = await fetch(`${BASE_URL}/paintings?${filterString}`);\r\n\r\n    return await data.json();\r\n  } catch (e) {\r\n    alert(\"Произошла ошибка при загрузке галлереи\");\r\n  }\r\n};\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\n\r\nimport usePaginationSlice from \"../hooks/usePagintaionSlice\";\r\n\r\nimport * as api from \"../utils/api\";\r\n\r\nclass GalleryStore {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  ////////////////////////Переменные////////////////////////\r\n  //Цвет темы\r\n  theme = \"light\";\r\n\r\n  //Картины\r\n  paintings = [];\r\n\r\n  //Фильтры\r\n  filters = {\r\n    name: {\r\n      querry: \"q\",\r\n      value: \"\",\r\n    },\r\n    author: {\r\n      querry: \"authorId\",\r\n      data: [],\r\n      value: \"\",\r\n    },\r\n    location: {\r\n      querry: \"&locationId\",\r\n      data: [],\r\n      value: \"\",\r\n    },\r\n    from: {\r\n      querry: \"&created_gte\",\r\n      value: \"\",\r\n    },\r\n    before: {\r\n      querry: \"&created_lte\",\r\n      value: \"\",\r\n    },\r\n  };\r\n\r\n  //Активная страница галлереи\r\n  page = 1;\r\n  //Количество картин на странице\r\n  paintingsOnPage = 0;\r\n  //Общее количество страниц\r\n  pagesCount = 0;\r\n  //Страницы для вывода в пагинации\r\n  slicedPages = [];\r\n\r\n  ////////////////////////Сеттеры////////////////////////\r\n  //Установка темы\r\n  setTheme(value) {\r\n    this.theme = value;\r\n  }\r\n\r\n  //Установка картин\r\n  setPaintings(data) {\r\n    this.paintings = data;\r\n  }\r\n\r\n  //Установка активной страницы\r\n  setPage(number) {\r\n    this.page = number;\r\n  }\r\n\r\n  //Установка количества картин на странице\r\n  setPaintingsOnPage(number) {\r\n    this.paintingsOnPage = number;\r\n  }\r\n\r\n  //Установка общего количества страниц\r\n  setPagesCount(number) {\r\n    this.pagesCount = number;\r\n  }\r\n\r\n  //Установка страниц для пагинации\r\n  setSlicedPages(arr) {\r\n    this.slicedPages = arr;\r\n  }\r\n\r\n  //Установка значения фильтра\r\n  setFilters(filter, value) {\r\n    this.filters[filter].value = value;\r\n  }\r\n\r\n  //Установка элементов списка фильтрации\r\n  setFiltersData(filter, data) {\r\n    this.filters[filter].data = data;\r\n  }\r\n\r\n  //Установка состояния списка фильтра\r\n  setIsActiveFilter(filter, value) {\r\n    this.filters[filter].isOpen = value;\r\n  }\r\n\r\n  ////////////////////////Методы////////////////////////\r\n  //Получение количества картин на странице в зависимости от размера экрана\r\n  getPaintingsOnPage() {\r\n    const windowWidth = window.innerWidth;\r\n\r\n    if (windowWidth < 768) {\r\n      runInAction(() => {\r\n        this.setPaintingsOnPage(6);\r\n      });\r\n    } else if (windowWidth >= 768 && windowWidth < 1024) {\r\n      runInAction(() => {\r\n        this.setPaintingsOnPage(8);\r\n      });\r\n    } else {\r\n      runInAction(() => {\r\n        this.setPaintingsOnPage(9);\r\n      });\r\n    }\r\n  }\r\n\r\n  //Получение элементов списка авторов\r\n  async getAuthors() {\r\n    const authors = await api.fetchAuthors();\r\n\r\n    this.setFiltersData(\"author\", authors);\r\n  }\r\n\r\n  //Получение элементов списка мест\r\n  async getLocations() {\r\n    const locations = await api.fetchLocations();\r\n\r\n    runInAction(() => {\r\n      this.setFiltersData(\"location\", locations);\r\n    });\r\n  }\r\n\r\n  //Получение общего количества страниц\r\n  async getPagesCount() {\r\n    const data = await api.fetchPaintings(\"\", \"\", this.filters);\r\n    const pagesCount = Math.ceil(data.length / this.paintingsOnPage);\r\n\r\n    runInAction(() => {\r\n      this.setPagesCount(pagesCount);\r\n    });\r\n  }\r\n\r\n  //Получение списка картин\r\n  async getPaintings() {\r\n    const paintings = await api.fetchPaintings(\r\n      this.page,\r\n      this.paintingsOnPage,\r\n      this.filters\r\n    );\r\n\r\n    runInAction(() => {\r\n      this.setPaintings(paintings);\r\n    });\r\n  }\r\n\r\n  //Полное обновление галлереи картин\r\n  async fullGalleryUpdate() {\r\n    await this.getPagesCount();\r\n    await this.getPaintings();\r\n\r\n    runInAction(() => {\r\n      this.setPage(1);\r\n      this.setSlicedPages(usePaginationSlice(this.page, this.pagesCount));\r\n    });\r\n  }\r\n}\r\n\r\nexport default GalleryStore;\r\n","import React from \"react\";\r\nimport GalleryStore from \"../store/GalleryStore\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const GalleryContext = React.createContext(<GalleryStore />);\r\n\r\nexport const GalleryProvider = ({ children }) => (\r\n  <GalleryContext.Provider value={new GalleryStore()}>\r\n    {children}\r\n  </GalleryContext.Provider>\r\n);\r\n\r\nGalleryProvider.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    body {\r\n        display: block;\r\n        min-height: 100vh;\r\n        font-family: 'Roboto', sans-serif;\r\n\r\n        background-color: ${(props) => props.theme.mainColor};\r\n        color: ${(props) => props.theme.secondaryColor};\r\n        transition: all 0.3s;\r\n    }\r\n\r\n    *,\r\n    *::after,\r\n    *::before {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    img{\r\n        display: block;\r\n        max-width: 100%;\r\n    }\r\n\r\n    li {\r\n        list-style: none;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","const sizes = {\r\n  l: \"1366px\",\r\n  m: \"1024px\",\r\n  s: \"768px\",\r\n};\r\n\r\nconst breakpoints = {\r\n  l: `min-width: ${sizes.l}`,\r\n  m: `min-width: ${sizes.m}`,\r\n  s: `min-width: ${sizes.s}`,\r\n};\r\n\r\nexport default breakpoints;\r\n","import styled from \"styled-components\";\r\nimport { breakpoints } from \"../GlobalStyles\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: repeat(4, minmax(0, 55px));\r\n  column-gap: 20px;\r\n\r\n  @media (${breakpoints.s}) {\r\n    grid-template-columns: repeat(12, minmax(0, 40px));\r\n  }\r\n\r\n  @media (${breakpoints.m}) {\r\n    grid-template-columns: repeat(12, minmax(0, 60px));\r\n  }\r\n\r\n  @media (${breakpoints.l}) {\r\n    grid-template-columns: repeat(12, minmax(0, 75px));\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as S from \"./style\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <S.Container>{children}</S.Container>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import styled from \"styled-components\";\r\nimport { breakpoints } from \"../GlobalStyles\";\r\n\r\nexport const InputRow = styled.div`\r\n  grid-column: span 4;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 15px;\r\n  margin-bottom: 15px;\r\n\r\n  width: 100%;\r\n  height: 45px;\r\n\r\n  border: 1px solid ${(props) => props.theme.borderColor};\r\n  border-radius: 8px;\r\n\r\n  @media (${breakpoints.s}) {\r\n    margin-bottom: 0;\r\n    grid-column: span 3;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  font-family: Roboto;\r\n  font-size: 0.875rem;\r\n\r\n  color: ${(props) => props.theme.secondaryColor};\r\n  background-color: inherit;\r\n\r\n  border: none;\r\n  outline: none;\r\n  width: 100%;\r\n  min-height: 100%;\r\n\r\n  ::placeholder {\r\n    color: ${(props) => props.theme.placeholderColor};\r\n  }\r\n\r\n  @media (${breakpoints.s}) {\r\n    font-size: 0.8125rem;\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useHistory } from \"react-router\";\r\nimport { GalleryContext } from \"../../context\";\r\n\r\nimport * as S from \"./style\";\r\n\r\nconst Input = observer(({ placeholder, filter, value }) => {\r\n  const store = useContext(GalleryContext);\r\n  const history = useHistory();\r\n\r\n  const handleChange = (e) => {\r\n    store.setFilters(filter, e.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key !== \"Enter\") return;\r\n\r\n    history.push(\"/page=1\");\r\n    store.fullGalleryUpdate();\r\n  };\r\n\r\n  return (\r\n    <S.InputRow>\r\n      <S.Input\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={(e) => handleChange(e)}\r\n        onKeyPress={(e) => handleKeyPress(e)}\r\n      />\r\n    </S.InputRow>\r\n  );\r\n});\r\n\r\nInput.propTypes = {\r\n  placeholder: PropTypes.string,\r\n  filter: PropTypes.string,\r\n  value: PropTypes.string,\r\n};\r\n\r\nexport default Input;\r\n","import styled from \"styled-components\";\r\nimport breakpoints from \"../GlobalStyles/breakpoints\";\r\n\r\nexport const SelectRow = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0 15px;\r\n  margin-bottom: 15px;\r\n  width: 100%;\r\n  grid-column: span 4;\r\n  background-color: ${(props) => props.theme.mainColor};\r\n\r\n  box-shadow: 0px 0px 0px 1px ${(props) => props.theme.borderColor};\r\n  border-radius: ${(props) => (props.isOpen ? \"8px 8px 0 0\" : \"8px\")};\r\n\r\n  @media (${breakpoints.s}) {\r\n    grid-column: span 3;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\n////////////////////////Лэйбл////////////////////////\r\nexport const LabelRow = styled.div`\r\n  cursor: pointer;\r\n  user-select: none;\r\n  overflow: hidden;\r\n\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-height: 45px;\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n  font-size: 0.875rem;\r\n\r\n  padding-right: 10px;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n\r\n  @media (${breakpoints.s}) {\r\n    font-size: 0.8125rem;\r\n  }\r\n`;\r\n\r\nexport const LabelIconRow = styled.div`\r\n  display: flex;\r\n  width: 10px;\r\n  height: 6px;\r\n\r\n  transition: all 0.3s;\r\n  transform: ${(props) => (props.isOpen ? \"rotate(180deg)\" : \"\")};\r\n`;\r\n\r\nexport const LabelIcon = styled.svg.attrs({\r\n  viewBox: \"0 0 10 6\",\r\n  fill: \"none\",\r\n  xmlns: \"http://www.w3.org/2000/svg\",\r\n})`\r\n  fill: ${(props) => props.theme.placeholderColor};\r\n  max-width: 100%;\r\n  transition: fill 0.3s;\r\n`;\r\n\r\n////////////////////////Список////////////////////////\r\nexport const List = styled.ul`\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  max-height: 400px;\r\n  overflow: hidden;\r\n\r\n  font-weight: 500;\r\n  line-height: 125%;\r\n\r\n  box-shadow: 0px 0px 0px 1px ${(props) => props.theme.borderColor};\r\n  border-radius: 0 0 8px 8px;\r\n  background-color: inherit;\r\n\r\n  z-index: 1;\r\n\r\n  @media (${breakpoints.s}) {\r\n    max-height: 355px;\r\n  }\r\n\r\n  @media (${breakpoints.s}) {\r\n    max-height: 300px;\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 30px;\r\n  width: 100%;\r\n  height: 40px;\r\n\r\n  overflow: hidden;\r\n\r\n  :hover {\r\n    background-color: ${(props) => props.theme.secondaryColor};\r\n    color: ${(props) => props.theme.mainColor};\r\n  }\r\n\r\n  @media (${breakpoints.s}) {\r\n    padding: 0 15px;\r\n  }\r\n\r\n  @media (${breakpoints.s}) {\r\n    padding: 0 22px;\r\n  }\r\n`;\r\n\r\nexport const ListText = styled.span`\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport * as S from \"./style\";\r\n\r\nconst Label = observer(({ label, placeholder, isOpen }) => (\r\n  <S.LabelRow>\r\n    <S.LabelText>{label || placeholder}</S.LabelText>\r\n    <S.LabelIconRow isOpen={isOpen}>\r\n      <S.LabelIcon>\r\n        <path d=\"M9.67861 1.8337L5.77064 5.68539C5.34503 6.10487 4.65497 6.10487 4.22936 5.68539L0.321394 1.8337C-0.365172 1.15702 0.121082 -8.3659e-08 1.09203 0L8.90797 6.73452e-07C9.87892 7.57113e-07 10.3652 1.15702 9.67861 1.8337Z\" />\r\n      </S.LabelIcon>\r\n    </S.LabelIconRow>\r\n  </S.LabelRow>\r\n));\r\n\r\nLabel.propTypes = {\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n};\r\n\r\nexport default Label;\r\n","import { useEffect } from \"react\";\r\n\r\nfunction useClickOutside(ref, handler) {\r\n  useEffect(\r\n    () => {\r\n      const listener = (event) => {\r\n        // Do nothing if clicking ref's element or descendent elements\r\n        if (!ref.current || ref.current.contains(event.target)) {\r\n          return;\r\n        }\r\n        handler();\r\n      };\r\n      document.addEventListener(\"mousedown\", listener);\r\n      document.addEventListener(\"touchstart\", listener);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", listener);\r\n        document.removeEventListener(\"touchstart\", listener);\r\n      };\r\n    },\r\n    // Add ref and handler to effect dependencies\r\n    // It's worth noting that because passed in handler is a new ...\r\n    // ... function on every render that will cause this effect ...\r\n    // ... callback/cleanup to run every render. It's not a big deal ...\r\n    // ... but to optimize you can wrap handler in useCallback before ...\r\n    // ... passing it into this hook.\r\n    [ref, handler]\r\n  );\r\n}\r\n\r\nexport default useClickOutside;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { GalleryContext } from \"../../context\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Label from \"./Label\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport \"./Simplebar.css\";\r\n\r\nimport * as S from \"./style\";\r\nimport useClickOutside from \"../../hooks/useClickOutside\";\r\n\r\nconst Select = observer(({ placeholder, filter, options, getFunc }) => {\r\n  const [label, setLabel] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const store = useContext(GalleryContext);\r\n  const history = useHistory();\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    //Получение элементов списка\r\n    getFunc();\r\n  }, [store]);\r\n\r\n  //Закрытие по клику снаружи\r\n  useClickOutside(ref, () => {\r\n    setIsOpen(false);\r\n  });\r\n\r\n  //Отмена бабблинга\r\n  const stopPropaganation = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n  };\r\n\r\n  const handleRowClick = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleListClick = (value, option) => {\r\n    history.push(\"/page=1\");\r\n\r\n    setLabel(option);\r\n\r\n    store.setFilters(filter, value);\r\n    setIsOpen(false);\r\n\r\n    store.fullGalleryUpdate();\r\n  };\r\n\r\n  return (\r\n    <S.SelectRow ref={ref} isOpen={isOpen} onClick={() => handleRowClick()}>\r\n      <Label label={label} placeholder={placeholder} isOpen={isOpen} />\r\n\r\n      {isOpen && store.filters[filter].data && (\r\n        <S.List onClick={stopPropaganation}>\r\n          <SimpleBar style={{ maxHeight: \"inherit\", padding: \"10px 0\" }}>\r\n            {store.filters[filter].data.map((item) => (\r\n              <S.ListItem\r\n                key={item.id}\r\n                onClick={() => handleListClick(item.id, item[options])}\r\n              >\r\n                <S.ListText>{item[options]}</S.ListText>\r\n              </S.ListItem>\r\n            ))}\r\n          </SimpleBar>\r\n        </S.List>\r\n      )}\r\n    </S.SelectRow>\r\n  );\r\n});\r\n\r\nSelect.propTypes = {\r\n  placeholder: PropTypes.string,\r\n  filter: PropTypes.string,\r\n  options: PropTypes.string,\r\n  //Функция получения элементов списка\r\n  getFunc: PropTypes.func,\r\n};\r\n\r\nexport default Select;\r\n","import styled from \"styled-components\";\r\nimport breakpoints from \"../GlobalStyles/breakpoints\";\r\n\r\nexport const SelectRow = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 0 15px;\r\n  grid-column: span 4;\r\n  background-color: ${(props) => props.theme.mainColor};\r\n\r\n  box-shadow: 0px 0px 0px 1px ${(props) => props.theme.borderColor};\r\n  border-radius: ${(props) => (props.isOpen ? \"8px 8px 0 0\" : \"8px\")};\r\n\r\n  @media (${breakpoints.s}) {\r\n    grid-column: span 3;\r\n  }\r\n`;\r\n\r\n//Label\r\n\r\nexport const LabelRow = styled.div`\r\n  cursor: pointer;\r\n  user-select: none;\r\n  overflow: hidden;\r\n\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-height: 45px;\r\n`;\r\n\r\nexport const LabelText = styled.span`\r\n  font-size: 0.875rem;\r\n\r\n  padding-right: 10px;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n\r\n  @media (${breakpoints.s}) {\r\n    font-size: 0.8125rem;\r\n  }\r\n`;\r\n\r\nexport const LabelIconRow = styled.div`\r\n  display: flex;\r\n  width: 10px;\r\n  height: 6px;\r\n\r\n  transition: all 0.3s;\r\n  transform: ${(props) => (props.isOpen ? \"rotate(180deg)\" : \"\")};\r\n`;\r\n\r\nexport const LabelIcon = styled.svg.attrs({\r\n  viewBox: \"0 0 10 6\",\r\n  fill: \"none\",\r\n  xmlns: \"http://www.w3.org/2000/svg\",\r\n})`\r\n  fill: ${(props) => props.theme.placeholderColor};\r\n  max-width: 100%;\r\n  transition: fill 0.3s;\r\n`;\r\n\r\n//YearsMenu\r\n\r\nexport const YearsMenu = styled.div`\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px 15px;\r\n  width: 100%;\r\n  background-color: inherit;\r\n  transition: all 0.3s;\r\n\r\n  box-shadow: 0px 0px 0px 1px ${(props) => props.theme.borderColor};\r\n  border-radius: 0 0 8px 8px;\r\n\r\n  z-index: 1;\r\n\r\n  @media (${breakpoints.s}) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media (${breakpoints.l}) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const YearsInputRow = styled.div`\r\n  flex: 0 1 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  max-width: 110px;\r\n  width: 100%;\r\n  height: 45px;\r\n\r\n  background-color: ${(props) => props.theme.filtersInputColor};\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const YearsInput = styled.input.attrs({\r\n  type: \"number\",\r\n  min: 0,\r\n})`\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n\r\n  outline: none;\r\n  border: none;\r\n  background-color: inherit;\r\n\r\n  font-family: Roboto;\r\n  font-size: 0.92rem;\r\n  line-height: 115%;\r\n\r\n  ::placeholder {\r\n    color: rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  @media (${breakpoints.s}) {\r\n    font-size: 0.8125rem;\r\n  }\r\n`;\r\n\r\nexport const YearsMenuDash = styled.span`\r\n  display: inline-block;\r\n  margin: 0 6px;\r\n  width: 12px;\r\n  height: 2px;\r\n  background-color: ${(props) => props.theme.secondaryColor};\r\n\r\n  @media (${breakpoints.s}) {\r\n    margin: 15px 0;\r\n  }\r\n\r\n  @media (${breakpoints.l}) {\r\n    margin: 0 10px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport * as S from \"./style\";\r\n\r\nconst Label = observer(({ placeholder, from, before, isOpen }) => (\r\n  <S.LabelRow>\r\n    <S.LabelText>\r\n      {from && before ? `${from} - ${before}` : placeholder}\r\n    </S.LabelText>\r\n\r\n    <S.LabelIconRow isOpen={isOpen}>\r\n      <S.LabelIcon>\r\n        <path d=\"M9.67861 1.8337L5.77064 5.68539C5.34503 6.10487 4.65497 6.10487 4.22936 5.68539L0.321394 1.8337C-0.365172 1.15702 0.121082 -8.3659e-08 1.09203 0L8.90797 6.73452e-07C9.87892 7.57113e-07 10.3652 1.15702 9.67861 1.8337Z\" />\r\n      </S.LabelIcon>\r\n    </S.LabelIconRow>\r\n  </S.LabelRow>\r\n));\r\n\r\nLabel.propTypes = {\r\n  placeholder: PropTypes.string,\r\n  from: PropTypes.number,\r\n  before: PropTypes.number,\r\n  isOpen: PropTypes.bool,\r\n};\r\n\r\nexport default Label;\r\n","import React, { useContext, useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { GalleryContext } from \"../../context\";\r\n\r\nimport Label from \"./Label\";\r\nimport * as S from \"./style\";\r\nimport useClickOutside from \"../../hooks/useClickOutside\";\r\n\r\nconst Years = observer(({ placeholder, from, before }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const store = useContext(GalleryContext);\r\n  const history = useHistory();\r\n  const ref = useRef(null);\r\n\r\n  //Закрытие по клику снаружи\r\n  useClickOutside(ref, () => {\r\n    setIsOpen(false);\r\n  });\r\n\r\n  //Отмена бабблинга\r\n  const stopPropaganation = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleChange = (e, filter) => {\r\n    store.setFilters(filter, e.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key !== \"Enter\") return;\r\n\r\n    history.push(\"/page=1\");\r\n    setIsOpen(false);\r\n\r\n    store.fullGalleryUpdate();\r\n  };\r\n\r\n  return (\r\n    <S.SelectRow ref={ref} isOpen={isOpen} onClick={() => handleClick()}>\r\n      <Label\r\n        placeholder={placeholder}\r\n        from={Number(store.filters[from].value)}\r\n        before={Number(store.filters[before].value)}\r\n        isOpen={isOpen}\r\n      />\r\n\r\n      {isOpen && (\r\n        <S.YearsMenu onClick={stopPropaganation}>\r\n          <S.YearsInputRow>\r\n            <S.YearsInput\r\n              placeholder=\"from\"\r\n              value={store.filters[from].value}\r\n              onChange={(e) => handleChange(e, \"from\")}\r\n              onKeyPress={(e) => handleKeyPress(e)}\r\n            />\r\n          </S.YearsInputRow>\r\n\r\n          <S.YearsMenuDash />\r\n\r\n          <S.YearsInputRow>\r\n            <S.YearsInput\r\n              placeholder=\"before\"\r\n              value={store.filters[before].value}\r\n              onChange={(e) => handleChange(e, \"before\")}\r\n              onKeyPress={(e) => handleKeyPress(e)}\r\n            />\r\n          </S.YearsInputRow>\r\n        </S.YearsMenu>\r\n      )}\r\n    </S.SelectRow>\r\n  );\r\n});\r\n\r\nYears.propTypes = {\r\n  placeholder: PropTypes.string,\r\n  from: PropTypes.string,\r\n  before: PropTypes.string,\r\n};\r\n\r\nexport default Years;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Filters = styled.div``;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\nimport { GalleryContext } from \"../../context\";\r\nimport { Container } from \"../Container\";\r\nimport { Input } from \"../Input\";\r\nimport { Select } from \"../Select\";\r\nimport { Years } from \"../Years\";\r\nimport * as S from \"./style\";\r\n\r\nconst Filters = observer(() => {\r\n  const store = useContext(GalleryContext);\r\n\r\n  return (\r\n    <S.Filters>\r\n      <Container>\r\n        <Input\r\n          placeholder=\"Name\"\r\n          filter=\"name\"\r\n          value={store.filters.name.value}\r\n        />\r\n        <Select\r\n          placeholder=\"Author\"\r\n          filter=\"author\"\r\n          options=\"name\"\r\n          getFunc={() => store.getAuthors()}\r\n        />\r\n        <Select\r\n          placeholder=\"Location\"\r\n          filter=\"location\"\r\n          options=\"location\"\r\n          getFunc={() => store.getLocations()}\r\n        />\r\n        <Years placeholder=\"Created\" from=\"from\" before=\"before\" />\r\n      </Container>\r\n    </S.Filters>\r\n  );\r\n});\r\n\r\nexport default Filters;\r\n","import styled from \"styled-components\";\r\nimport { breakpoints } from \"../GlobalStyles\";\r\nimport { Container } from \"../Container/style\";\r\n\r\nexport const GalleryRow = styled.section`\r\n  margin-bottom: 30px;\r\n  padding-top: 45px;\r\n\r\n  @media (${breakpoints.s}) {\r\n    margin-bottom: 35px;\r\n  }\r\n\r\n  @media (${breakpoints.m}) {\r\n    margin-bottom: 40px;\r\n  }\r\n`;\r\n\r\nexport const GalleryContainer = styled(Container)`\r\n  row-gap: 20px;\r\n`;\r\n\r\nexport const ImageRow = styled.div`\r\n  position: relative;\r\n  grid-column: span 4;\r\n  overflow: hidden;\r\n\r\n  max-width: 100%;\r\n  height: 205px;\r\n\r\n  border-radius: 20px;\r\n\r\n  @media (${breakpoints.s}) {\r\n    height: 249px;\r\n    grid-column: span 6;\r\n  }\r\n\r\n  @media (${breakpoints.m}) {\r\n    height: 230px;\r\n    grid-column: span 4;\r\n  }\r\n\r\n  @media (${breakpoints.l}) {\r\n    height: 275px;\r\n  }\r\n`;\r\n\r\nexport const ImageLink = styled.a``;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\n////////////////////////Лейбл////////////////////////\r\nexport const ImageLabelRow = styled.div`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  padding: 5px 15px;\r\n  width: 100%;\r\n  height: 52%;\r\n\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  color: #000000;\r\n  transform: translateY(-30px);\r\n  transition: transform 0.4s;\r\n\r\n  :hover {\r\n    transform: translateY(-100%);\r\n  }\r\n`;\r\n\r\nexport const ImageTitle = styled.h3`\r\n  margin-bottom: 6px;\r\n\r\n  font-weight: bold;\r\n  font-size: 1.125rem;\r\n  line-height: 111%;\r\n  text-transform: uppercase;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n\r\n  @media (${breakpoints.s}) {\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\nexport const LabelRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 20px;\r\n  margin-bottom: 5px;\r\n\r\n  font-size: 0.8125rem;\r\n  line-height: 154%;\r\n\r\n  @media (${breakpoints.s}) {\r\n    font-size: 0.875rem;\r\n  }\r\n`;\r\n\r\nexport const LabelTitle = styled.p`\r\n  margin-right: 5px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const LabelText = styled.p`\r\n  font-weight: 300;\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport * as S from \"./style\";\r\n\r\nconst Label = observer(({ title, text }) => (\r\n  <S.LabelRow>\r\n    <S.LabelTitle>{title}</S.LabelTitle>\r\n    <S.LabelText>{text}</S.LabelText>\r\n  </S.LabelRow>\r\n));\r\n\r\nLabel.propTypes = {\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default Label;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { GalleryContext } from \"../../context\";\r\n\r\nimport { BASE_URL } from \"../../utils/api\";\r\n\r\nimport Label from \"./Label\";\r\nimport * as S from \"./style\";\r\n\r\nconst Gallery = observer(() => {\r\n  const store = useContext(GalleryContext);\r\n  const { page } = useParams();\r\n\r\n  useEffect(() => {\r\n    //Установка страницы из адресной строки при несовпадении\r\n    if (page && store.page != page) {\r\n      store.setPage(Number(page));\r\n    }\r\n\r\n    //Первичная инициализация\r\n    store.getPaintingsOnPage();\r\n    store.getPagesCount();\r\n    store.getPaintings();\r\n  }, [store]);\r\n\r\n  //Поиск поля значения по его id(для поиска места и автора)\r\n  const findFieldById = (field, id) => {\r\n    return store.filters[field].data.find((item) => item.id === id);\r\n  };\r\n\r\n  return (\r\n    <S.GalleryRow>\r\n      <S.GalleryContainer>\r\n        {store.paintings &&\r\n          store.paintings.map((item, index) => (\r\n            <S.ImageRow key={item.id}>\r\n              <S.ImageLink\r\n                href={BASE_URL + item.imageUrl}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <S.Image\r\n                  src={BASE_URL + item.imageUrl}\r\n                  alt={`image-${index}`}\r\n                />\r\n              </S.ImageLink>\r\n              <S.ImageLabelRow>\r\n                <S.ImageTitle>{item.name}</S.ImageTitle>\r\n\r\n                <Label\r\n                  title=\"Author:\"\r\n                  text={findFieldById(\"author\", item.authorId).name}\r\n                />\r\n                <Label title=\"Created:\" text={item.created} />\r\n                <Label\r\n                  title=\"Location:\"\r\n                  text={findFieldById(\"location\", item.locationId).location}\r\n                />\r\n              </S.ImageLabelRow>\r\n            </S.ImageRow>\r\n          ))}\r\n      </S.GalleryContainer>\r\n    </S.GalleryRow>\r\n  );\r\n});\r\n\r\nexport default Gallery;\r\n","import styled from \"styled-components\";\r\nimport { breakpoints } from \"../GlobalStyles\";\r\n\r\nexport const Header = styled.header`\r\n  margin-bottom: 25px;\r\n  max-width: 100%;\r\n\r\n  @media (${breakpoints.s}) {\r\n    margin-bottom: 35px;\r\n  }\r\n`;\r\n\r\nexport const LogoRow = styled.div`\r\n  grid-column: span 2;\r\n  width: 64px;\r\n  height: 64px;\r\n`;\r\n\r\nexport const Logo = styled.img``;\r\n\r\nexport const ThemeRow = styled.div`\r\n  cursor: pointer;\r\n  grid-column: -2;\r\n  justify-self: end;\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n\r\nexport const ThemeIcon = styled.svg.attrs({\r\n  viewBox: \"0 0 20 20\",\r\n  fill: \"none\",\r\n  xmlns: \"http://www.w3.org/2000/svg\",\r\n})`\r\n  fill: ${(props) => props.theme.secondaryColor};\r\n  max-width: 100%;\r\n  transition: fill 0.3s;\r\n`;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\nimport { GalleryContext } from \"../../context\";\r\nimport { Container } from \"../Container\";\r\nimport * as S from \"./style\";\r\n\r\nconst Header = observer(() => {\r\n  const store = useContext(GalleryContext);\r\n\r\n  const handleThemeChange = () => {\r\n    store.theme === \"light\" ? store.setTheme(\"dark\") : store.setTheme(\"light\");\r\n  };\r\n\r\n  return (\r\n    <S.Header>\r\n      <Container>\r\n        <S.LogoRow>\r\n          <S.Logo src=\"/images/logo.svg\" />\r\n        </S.LogoRow>\r\n\r\n        <S.ThemeRow onClick={handleThemeChange}>\r\n          <S.ThemeIcon>\r\n            <path d=\"M10 5.45455C7.49091 5.45455 5.45455 7.49091 5.45455 10C5.45455 12.5091 7.49091 14.5455 10 14.5455C12.5091 14.5455 14.5455 12.5091 14.5455 10C14.5455 7.49091 12.5091 5.45455 10 5.45455ZM0.909091 10.9091H2.72727C3.22727 10.9091 3.63636 10.5 3.63636 10C3.63636 9.5 3.22727 9.09091 2.72727 9.09091H0.909091C0.409091 9.09091 0 9.5 0 10C0 10.5 0.409091 10.9091 0.909091 10.9091ZM17.2727 10.9091H19.0909C19.5909 10.9091 20 10.5 20 10C20 9.5 19.5909 9.09091 19.0909 9.09091H17.2727C16.7727 9.09091 16.3636 9.5 16.3636 10C16.3636 10.5 16.7727 10.9091 17.2727 10.9091ZM9.09091 0.909091V2.72727C9.09091 3.22727 9.5 3.63636 10 3.63636C10.5 3.63636 10.9091 3.22727 10.9091 2.72727V0.909091C10.9091 0.409091 10.5 0 10 0C9.5 0 9.09091 0.409091 9.09091 0.909091ZM9.09091 17.2727V19.0909C9.09091 19.5909 9.5 20 10 20C10.5 20 10.9091 19.5909 10.9091 19.0909V17.2727C10.9091 16.7727 10.5 16.3636 10 16.3636C9.5 16.3636 9.09091 16.7727 9.09091 17.2727ZM4.53636 3.25455C4.18182 2.9 3.6 2.9 3.25455 3.25455C2.9 3.60909 2.9 4.19091 3.25455 4.53636L4.21818 5.5C4.57273 5.85455 5.15455 5.85455 5.5 5.5C5.84545 5.14545 5.85455 4.56364 5.5 4.21818L4.53636 3.25455ZM15.7818 14.5C15.4273 14.1455 14.8455 14.1455 14.5 14.5C14.1455 14.8545 14.1455 15.4364 14.5 15.7818L15.4636 16.7455C15.8182 17.1 16.4 17.1 16.7455 16.7455C17.1 16.3909 17.1 15.8091 16.7455 15.4636L15.7818 14.5ZM16.7455 4.53636C17.1 4.18182 17.1 3.6 16.7455 3.25455C16.3909 2.9 15.8091 2.9 15.4636 3.25455L14.5 4.21818C14.1455 4.57273 14.1455 5.15455 14.5 5.5C14.8545 5.84545 15.4364 5.85455 15.7818 5.5L16.7455 4.53636ZM5.5 15.7818C5.85455 15.4273 5.85455 14.8455 5.5 14.5C5.14545 14.1455 4.56364 14.1455 4.21818 14.5L3.25455 15.4636C2.9 15.8182 2.9 16.4 3.25455 16.7455C3.60909 17.0909 4.19091 17.1 4.53636 16.7455L5.5 15.7818Z\" />\r\n          </S.ThemeIcon>\r\n        </S.ThemeRow>\r\n      </Container>\r\n    </S.Header>\r\n  );\r\n});\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { breakpoints } from \"../GlobalStyles\";\r\n\r\n// Линк\r\nconst styledLink = styled(NavLink)`\r\n  cursor: ${(props) => (props.disabled ? \"auto\" : \"pointer\")};\r\n  text-decoration: none;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 41px;\r\n  height: 41px;\r\n  border: none;\r\n  border-radius: 0;\r\n\r\n  background-color: ${(props) => props.theme.mainColor};\r\n  color: ${(props) => props.theme.secondaryColor};\r\n\r\n  border: 1px solid\r\n    ${(props) =>\r\n      props.disabled\r\n        ? props.theme.disabledButtonColor\r\n        : props.theme.secondaryColor};\r\n  border-right: none;\r\n  z-index: 1;\r\n\r\n  :first-child {\r\n    border-radius: 8px 0 0 8px;\r\n  }\r\n\r\n  :last-child {\r\n    border-radius: 0 8px 8px 0;\r\n\r\n    border-right: 1px solid\r\n      ${(props) =>\r\n        props.disabled\r\n          ? props.theme.disabledButtonColor\r\n          : props.theme.secondaryColor};\r\n  }\r\n\r\n  @media (${breakpoints.l}) {\r\n    :hover {\r\n      background-color: ${(props) =>\r\n        props.disabled ? \"\" : props.theme.secondaryColor};\r\n      color: ${(props) => (props.disabled ? \"\" : props.theme.mainColor)};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Pagination = styled.div`\r\n  grid-column: span 4;\r\n  display: flex;\r\n\r\n  @media (${breakpoints.m}) {\r\n    grid-column: span 3;\r\n  }\r\n`;\r\n\r\n////////////////////////Стрелочные кнопки////////////////////////\r\nexport const ArrowButton = styled(styledLink)`\r\n  svg {\r\n    path {\r\n      fill: ${(props) =>\r\n        props.disabled\r\n          ? props.theme.disabledButtonColor\r\n          : props.theme.secondaryColor};\r\n    }\r\n  }\r\n\r\n  @media (${breakpoints.l}) {\r\n    :hover {\r\n      svg {\r\n        path {\r\n          fill: ${(props) => (props.disabled ? \"\" : props.theme.mainColor)};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ArrowButtonIcon = styled.svg.attrs({\r\n  viewBox: \"0 0 9 13\",\r\n  fill: \"none\",\r\n  xmlns: \"http://www.w3.org/2000/svg\",\r\n})`\r\n  width: 7.69px;\r\n  height: 12.81px;\r\n`;\r\n\r\nexport const DoubleArrowButtonIcon = styled.svg.attrs({\r\n  viewBox: \"0 0 14 13\",\r\n  fill: \"none\",\r\n  xmlns: \"http://www.w3.org/2000/svg\",\r\n})`\r\n  width: 13.45px;\r\n  height: 12.81px;\r\n`;\r\n\r\n// Кнопки страниц\r\nexport const NumberButton = styled(styledLink)`\r\n  &.active {\r\n    background-color: ${(props) => props.theme.secondaryColor};\r\n    color: ${(props) => props.theme.mainColor};\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport * as S from \"./style\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { GalleryContext } from \"../../context\";\r\n\r\nconst BackButtons = observer(({ changePage }) => {\r\n  const store = useContext(GalleryContext);\r\n\r\n  return (\r\n    <>\r\n      <S.ArrowButton\r\n        disabled={store.page === 1}\r\n        onClick={(e) => changePage(e, 1)}\r\n        to={\"/page=1\"}\r\n      >\r\n        <S.DoubleArrowButtonIcon>\r\n          <path d=\"M2.71401 6.49988L7.80231 1.62545C8.16797 1.275 8.16797 0.706895 7.80231 0.356587C7.43665 0.00613754 6.84368 0.00613754 6.47787 0.356587L0.727266 5.86567C0.544436 6.04091 0.453125 6.27034 0.453125 6.49988C0.453125 6.72951 0.544614 6.9591 0.727266 7.13426L6.47787 12.6433C6.84368 12.9939 7.43668 12.9939 7.80231 12.6433C8.16797 12.293 8.16797 11.7248 7.80231 11.3745L2.71401 6.49988ZM13.632 11.3745C13.9977 11.7248 13.9977 12.293 13.632 12.6433C13.2663 12.9939 12.6735 12.9939 12.3075 12.6433L6.55693 7.13428C6.3741 6.95913 6.28293 6.72953 6.28293 6.49991C6.28293 6.27037 6.37427 6.04077 6.55693 5.8657L12.3075 0.356587C12.6735 0.00613754 13.2663 0.00613754 13.632 0.356587C13.9977 0.706895 13.9977 1.27498 13.632 1.62545L8.54358 6.49988L13.632 11.3745Z\" />\r\n        </S.DoubleArrowButtonIcon>\r\n      </S.ArrowButton>\r\n      <S.ArrowButton\r\n        disabled={store.page === 1}\r\n        onClick={(e) => changePage(e, store.page - 1)}\r\n        to={\"/page=\" + (store.page - 1)}\r\n      >\r\n        <S.ArrowButtonIcon>\r\n          <path d=\"M0.932837 7.13428L6.73159 12.6433C7.10046 12.9939 7.69852 12.9939 8.06721 12.6433C8.43593 12.293 8.43593 11.7248 8.06721 11.3745L2.93621 6.49991L8.06706 1.62545C8.43578 1.275 8.43578 0.706895 8.06706 0.356587C7.69834 0.00613754 7.10031 0.00613754 6.73144 0.356587L0.932687 5.86567C0.748326 6.04091 0.65625 6.27034 0.65625 6.49988C0.65625 6.72953 0.748506 6.95913 0.932837 7.13428Z\" />\r\n        </S.ArrowButtonIcon>\r\n      </S.ArrowButton>\r\n    </>\r\n  );\r\n});\r\n\r\nBackButtons.propTypes = {\r\n  changePage: PropTypes.func,\r\n};\r\n\r\nexport default BackButtons;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport * as S from \"./style\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { GalleryContext } from \"../../context\";\r\n\r\nconst ForwardButtons = observer(({ changePage }) => {\r\n  const store = useContext(GalleryContext);\r\n\r\n  return (\r\n    <>\r\n      <S.ArrowButton\r\n        disabled={store.page === store.pagesCount}\r\n        onClick={(e) => changePage(e, store.page + 1)}\r\n        to={\"/page=\" + (store.page + 1)}\r\n      >\r\n        <S.ArrowButtonIcon>\r\n          <path d=\"M8.06716 7.13428L2.26841 12.6433C1.89954 12.9939 1.30148 12.9939 0.932791 12.6433C0.56407 12.293 0.56407 11.7248 0.932791 11.3745L6.06379 6.49991L0.93294 1.62545C0.564219 1.275 0.564219 0.706895 0.93294 0.356587C1.30166 0.00613754 1.89969 0.00613754 2.26856 0.356587L8.06731 5.86567C8.25167 6.04091 8.34375 6.27034 8.34375 6.49988C8.34375 6.72953 8.25149 6.95913 8.06716 7.13428Z\" />\r\n        </S.ArrowButtonIcon>\r\n      </S.ArrowButton>\r\n      <S.ArrowButton\r\n        disabled={store.page === store.pagesCount}\r\n        onClick={(e) => changePage(e, store.pagesCount)}\r\n        to={\"/page=\" + store.pagesCount}\r\n      >\r\n        <S.DoubleArrowButtonIcon>\r\n          <path d=\"M11.286 6.49988L6.19769 1.62545C5.83203 1.275 5.83203 0.706895 6.19769 0.356587C6.56335 0.00613754 7.15632 0.00613754 7.52213 0.356587L13.2727 5.86567C13.4556 6.04091 13.5469 6.27034 13.5469 6.49988C13.5469 6.72951 13.4554 6.9591 13.2727 7.13426L7.52213 12.6433C7.15632 12.9939 6.56332 12.9939 6.19769 12.6433C5.83203 12.293 5.83203 11.7248 6.19769 11.3745L11.286 6.49988ZM0.367995 11.3745C0.00233503 11.7248 0.00233503 12.293 0.367995 12.6433C0.733655 12.9939 1.32645 12.9939 1.69247 12.6433L7.44307 7.13428C7.6259 6.95913 7.71707 6.72953 7.71707 6.49991C7.71707 6.27037 7.62573 6.04077 7.44307 5.8657L1.69247 0.356587C1.32648 0.00613754 0.733655 0.00613754 0.367995 0.356587C0.00233503 0.706895 0.00233503 1.27498 0.367995 1.62545L5.45642 6.49988L0.367995 11.3745Z\" />\r\n        </S.DoubleArrowButtonIcon>\r\n      </S.ArrowButton>\r\n    </>\r\n  );\r\n});\r\n\r\nForwardButtons.propTypes = {\r\n  changePage: PropTypes.func,\r\n};\r\n\r\nexport default ForwardButtons;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport usePaginationSlice from \"../../hooks/usePagintaionSlice\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nimport BackButtons from \"./BackButtons\";\r\nimport ForwardButtons from \"./ForwardButtons\";\r\nimport { Container } from \"../Container\";\r\n\r\nimport * as S from \"./style\";\r\n\r\nimport { GalleryContext } from \"../../context\";\r\n\r\nconst Pagination = observer(() => {\r\n  const store = useContext(GalleryContext);\r\n\r\n  useEffect(() => {\r\n    //Первичная инициализация массива страниц\r\n    store.setSlicedPages(usePaginationSlice(store.page, store.pagesCount));\r\n  }, [store]);\r\n\r\n  const handleClick = (e, page) => {\r\n    if (page === store.page || page <= 0 || page > store.pagesCount) {\r\n      e.preventDefault();\r\n      return;\r\n    }\r\n\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    store.setPage(page);\r\n    store.setSlicedPages(usePaginationSlice(store.page, store.pagesCount));\r\n\r\n    store.getPaintings();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <S.Pagination>\r\n        <BackButtons changePage={(e, page) => handleClick(e, page)} />\r\n\r\n        {store.slicedPages.map((item, index) => (\r\n          <S.NumberButton\r\n            key={index}\r\n            onClick={(e) => handleClick(e, item)}\r\n            to={\"/page=\" + item}\r\n            activeClassName=\"active\"\r\n          >\r\n            {item}\r\n          </S.NumberButton>\r\n        ))}\r\n\r\n        <ForwardButtons changePage={(e, page) => handleClick(e, page)} />\r\n      </S.Pagination>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default Pagination;\r\n","import styled from \"styled-components\";\r\nimport { breakpoints } from \"../GlobalStyles\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 25px 20px 34px;\r\n  min-height: 100vh;\r\n\r\n  @media (${breakpoints.s}) {\r\n    padding-top: 35px;\r\n    padding-bottom: 54px;\r\n  }\r\n\r\n  @media (${breakpoints.m}) {\r\n    padding-bottom: 62px;\r\n  }\r\n\r\n  @media (${breakpoints.l}) {\r\n    padding-bottom: 97px;\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport * as S from \"./style\";\r\n\r\nconst Wrapper = ({ children }) => <S.Wrapper>{children}</S.Wrapper>;\r\n\r\nWrapper.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Wrapper;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { GalleryContext } from \"../../context\";\r\nimport { Filters } from \"../Filters\";\r\nimport { Gallery } from \"../Gallery\";\r\nimport { Header } from \"../Header\";\r\nimport { Pagination } from \"../Pagination\";\r\nimport { Wrapper } from \"../Wrapper\";\r\n\r\nconst App = observer(() => {\r\n  const store = useContext(GalleryContext);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Header />\r\n      <Filters />\r\n      <Switch>\r\n        <Route path=\"/page=:page\">\r\n          <Gallery />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/page=1\" />\r\n        </Route>\r\n      </Switch>\r\n      {store.pagesCount > 1 && <Pagination />}\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default App;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GalleryContext } from \"../../context\";\r\n\r\nconst themes = {\r\n  dark: {\r\n    mainColor: \"#000000\",\r\n    secondaryColor: \"#ffffff\",\r\n    borderColor: \"#ffffff\",\r\n    placeholderColor: \"rgba(255, 255, 255, 0.3)\",\r\n    filtersInputColor: \"#FFFFFF\",\r\n    disabledButtonColor: \"rgba(255, 255, 255, 0.3)\",\r\n  },\r\n  light: {\r\n    mainColor: \"#ffffff\",\r\n    secondaryColor: \"#000000\",\r\n    borderColor: \"rgba(0, 0, 0, 0.3)\",\r\n    placeholderColor: \"rgba(0, 0, 0, 0.3)\",\r\n    filtersInputColor: \"#EFEFEF\",\r\n    disabledButtonColor: \"rgba(0, 0, 0, 0.3)\",\r\n  },\r\n};\r\n\r\nconst Theme = observer(({ children }) => {\r\n  const store = useContext(GalleryContext);\r\n\r\n  return <ThemeProvider theme={themes[store.theme]}>{children}</ThemeProvider>;\r\n});\r\n\r\nexport default Theme;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { App } from \"./components/App\";\r\nimport { GlobalStyles } from \"./components/GlobalStyles\";\r\nimport { Theme } from \"./components/Theme\";\r\nimport { GalleryProvider } from \"./context\";\r\n\r\nReactDOM.render(\r\n  <GalleryProvider>\r\n    <Theme>\r\n      <GlobalStyles />\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Theme>\r\n  </GalleryProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}